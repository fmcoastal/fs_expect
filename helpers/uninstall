#!/bin/bash
# this script should be placed in the target "OUTPUT_DIR" 
#       eg:cn96xx-release-output
#  basically, it removed all parts of a Package
#       The script is a simple script. - just modify for your use case.

#BASE_DIR=/home/fsmith/marvell/sdk/SDK190603/SDK10.0_19.06.3-src
#BASE_DIR=/home/fsmith/marvell/sdk/SDK10.1.1.0-PR
BASE_DIR=/home/fsmith/marvell/sdk/SDK-10.3.2.1


PACKAGE_NAME=fs_expect
PACKAGE_NAME_FULL=fs_expect-1.0.0

GREEN=$'\e[32m'
NORMAL=$'\e[0m'



OUTPUT_DIR=$BASE_DIR/cn96xx-release-output
#OUTPUT_DIR=$BASE_DIR/a37xx_espressobin_1000_800-release-output

echo $GREEN
echo "****************"
echo "before:"
echo $NORMAL 
echo "ls -la  $OUTPUT_DIR/build/$PACKAGE_NAME_FULL"
ls -la $OUTPUT_DIR/build/$PACKAGE_NAME_FULL

echo $GREEN
echo "****************"
echo "remove:"
echo $NORMAL 
echo "rm -rf $OUTPUT_DIR/build/$PACKAGE_NAME_FULL"
rm -rf $OUTPUT_DIR/build/$PACKAGE_NAME_FULL

echo $GREEN
echo "****************"
echo "after:  "
echo $NORMAL 
echo "ls -la $OUTPUT_DIR/build/$PACKAGE_NAME_FULL"
ls -la $OUTPUT_DIR/build/$PACKAGE_NAME_FULL


# look to see if Download cache location has been defined.
# if so, delete the Cache.
PKG_CACHE=$(cat ~/.bashrc | grep BR2_DL_DIR )
if [ "$PKG_CACHE" != "" ] ; then  
   echo $GREEN
   echo "PKG_CACHE = $PKG_CACHE"
   #get the remaining strign after the '=' signe
   BR2_DL_DIRECTORY="${PKG_CACHE#*=}"
   #echo "BR2_DL_DIRECTORY: $BR2_DL_DIRECTORY"

   echo "****************"
   echo "delete the cached downloaded: $BR2_DL_DIRECTORY/$PACKAGE_NAME"

   echo $NORMAL 
   echo "rm -rf  $BR2_DL_DIRECTORY/$PACKAGE_NAME"
   rm -rf  $BR2_DL_DIRECTORY/$PACKAGE_NAME
   echo "****************"
   echo "validate cash deleted..."
   echo "ls -la $BR2_DL_DIRECTORY/$PACKAGE_NAME"
   ls -la $BR2_DL_DIRECTORY/$PACKAGE_NAME
else
   echo $GREEN
   echo "****************"
   echo "Cached Downloads not found/used ?? "
   echo $NORMAL 
   echo "env |grep /sdk/BR2_LD_DIR  "
   echo  $PKG_CACHE
fi

echo $GREEN
echo "****************"
echo "done"
echo "****************"
echo $NORMAL 
